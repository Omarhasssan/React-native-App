Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};exports.default=function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{teams:[],curntTeam:{}};var action=arguments[1];switch(action.type){case'ADD_TEAM':return _extends({},state,{teams:[].concat(_toConsumableArray(state.teams),[action.team])});case'TEAMS':return _extends({},state,{teams:action.teams});case'UPDATE_TEAM_PLAYERS':return _extends({},state,{teams:updateTeamPlayers(state.teams,action.payload.teamId,action.payload.player),curntTeam:action.payload.teamId===state.curntTeam.id?_extends({},state.curntTeam,{players:_extends({},state.curntTeam.players,_defineProperty({},state.curntTeam.players.length,action.payload.player))}):state.curntTeam});case'UPDATE_PLAYER':console.log(" in UPDATE_PLAYER ");return _extends({},state,{teams:updatePlayer(state.teams,action.payload.teamId,action.payload.userId,action.payload.type,action.payload.value),curntTeam:_extends({},state.curntTeam,updatePlayer([state.curntTeam],action.payload.teamId,action.payload.userId,action.payload.type,action.payload.value)[0])});case'SET_CURNT_TEAM':return _extends({},state,{curntTeam:action.team});default:return state;}};function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function updateTeamPlayers(teams,teamId,player){return teams.map(function(team){if(team.id===teamId){return _extends({},team,{players:_extends({},team.players,_defineProperty({},team.players.length,player))});}return team;});}function updatePlayer(teams,teamId,userId,type,value){var x=teams.map(function(team){if(team.id==teamId){team.players=Object.keys(team.players).map(function(playerId){if(team.players[playerId].id==userId){return _defineProperty({},playerId,_extends({},team.players[playerId],_defineProperty({},type,value)));}return _defineProperty({},playerId,_extends({},team.players[playerId]));})[0];return team;}return team;});return x;}