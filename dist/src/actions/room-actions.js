Object.defineProperty(exports,"__esModule",{value:true});exports.setRoomObserver=exports.leaveRoom=exports.setRoomLocation=exports.setRoomDate=exports.listenToRoomChanges=exports.joinRoom=exports.updateRoom=exports.setJoinedRoom=exports.updateRoomDB=exports.getRooms=exports.createRoom=undefined;var _this=this;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _helpers=require('../helpers');var _userActions=require('./user-actions');var _requestActions=require('./request-actions');var _firebase=require('../config/firebase');var _firebase2=_interopRequireDefault(_firebase);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var createRoom=exports.createRoom=function createRoom(user,Name,socket){return function(dispatch){var room={};room.teamOwner=user.teamId;room.name=Name;room.settings={};_helpers.DBHelpers.addRoom(room);_helpers.DBHelpers.getTeamById(user.teamId).then(function(team){var Room=_extends({},room,{teamOwner:team});dispatch({type:'CREATE_ROOM_BY_ROOM_ID',id:Room.id});dispatch({type:'ADD_ROOM',room:Room});dispatch((0,_userActions.updateUserRoom)(user,Room));socket.emit('addRoom',{addedRoom:Room});});};};var getRooms=exports.getRooms=function getRooms(){return function(dispatch){_helpers.DBHelpers.getRooms().then(function(rooms){dispatch({type:'ROOMS',rooms:rooms});});};};var updateRoomDB=exports.updateRoomDB=function updateRoomDB(route,value){_helpers.DBHelpers.updateRoom(route,value);};var setJoinedRoom=exports.setJoinedRoom=function setJoinedRoom(room){return function(dispatch){dispatch({type:'SET_JOINED_ROOM',room:room});};};var updateRoom=exports.updateRoom=function updateRoom(room,type,value,socket){return function(dispatch){var updatedRoom=_extends({},room,_defineProperty({},type,value));socket.emit('roomUpdated',{updatedRoom:updatedRoom});};};var joinRoom=exports.joinRoom=function joinRoom(room,team,socket){return function(dispatch){dispatch({type:'CREATE_ROOM_BY_ROOM_ID',id:room.id});updateRoomDB('Rooms/'+room.id+'/joinedTeam',team.id);dispatch(updateRoom(room,'joinedTeam',team,socket));};};var listenToRoomChanges=exports.listenToRoomChanges=function listenToRoomChanges(user,socket){return function(dispatch){dispatch({type:'JOIN_ROOMS_CHANNEL'});socket.on('updateRooms',function(updatedRoom){dispatch({type:'UPDATE_ROOMS',room:{id:updatedRoom.id,updatedRoom:updatedRoom}});});socket.on('roomAdded',function(addedRoom){if(addedRoom.id!==user.roomId){dispatch({type:'ADD_ROOM',room:addedRoom});}});socket.on('updateRoom',function(updatedRoom){console.log('in update Room Socet');if(updatedRoom.id===user.roomId){console.log('update mycreatdRoom');dispatch({type:'UPDATE_CREATED_ROOM',room:{id:updatedRoom.id,updatedRoom:updatedRoom}});}else{console.log('update myjoinedRoom');dispatch({type:'UPDATE_JOINED_ROOM',room:{id:updatedRoom.id,updatedRoom:updatedRoom}});}});var first=true;_firebase2.default.database().ref('Rooms').on('child_added',function(room){room=room.toJSON();_firebase2.default.database().ref('Rooms'+'/'+room.id+'/'+'settings'+'/'+'observer'+'/'+'status').on('value',function _callee(status){var updatedRoom;return regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!first){_context.next=4;break;}first=false;_context.next=9;break;case 4:_context.next=6;return regeneratorRuntime.awrap(_helpers.DBHelpers.getRoomById(room.id));case 6:updatedRoom=_context.sent;dispatch(updateRoom(updatedRoom,'settings',updatedRoom.settings,socket));first=false;case 9:case'end':return _context.stop();}}},null,_this);});});};};var setRoomDate=exports.setRoomDate=function setRoomDate(room,date,socket){return function(dispatch){updateRoomDB('Rooms/'+room.id+'/settings/date',date);dispatch(updateRoom(room,'settings',_extends({},room.settings,{date:date}),socket));};};var setRoomLocation=exports.setRoomLocation=function setRoomLocation(room,location,socket){return function(dispatch){updateRoomDB('Rooms/'+room.id+'/settings/location/address',location.address);updateRoomDB('Rooms/'+room.id+'/settings/location/latitude',location.latitude);updateRoomDB('Rooms/'+room.id+'/settings/location/longitude',location.longitude);dispatch(updateRoom(room,'settings',_extends({},room.settings,{location:location}),socket));};};var leaveRoom=exports.leaveRoom=function leaveRoom(room,socket){return function(dispatch){updateRoomDB('Rooms/'+room.id+'/joinedTeam',null);dispatch(updateRoom(room,'joinedTeam',null,socket));socket.emit('leaveRoom',{roomId:room.id});};};var setRoomObserver=exports.setRoomObserver=function setRoomObserver(room,observerId,socket){return function(dispatch){if(observerId){updateRoomDB('Rooms/'+room.id+'/settings/observer/id',observerId);updateRoomDB('Rooms/'+room.id+'/settings/observer/status','PENDING');if(room.settings&&room.settings.observer&&room.settings.observer.info.id!=observerId){dispatch((0,_requestActions.removeObservingRequest)(room.id,room.settings.observer.info.id,socket));}dispatch((0,_requestActions.saveAndSendObservingRequest)(room,observerId,socket));_helpers.DBHelpers.getUserById(observerId).then(function(user){dispatch(updateRoom(room,'settings',_extends({},room.settings,{observer:{info:_extends({},user),status:'PENDING'}}),socket));});}else{dispatch((0,_requestActions.removeObservingRequest)(room.id,room.settings.observer.info.id,socket));updateRoomDB('Rooms/'+room.id+'/settings/observer',null);dispatch(updateRoom(room,'settings',_extends({},room.settings,{observer:{}}),socket));}};};