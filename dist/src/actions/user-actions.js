Object.defineProperty(exports,"__esModule",{value:true});exports.listenToUserChanges=exports.getPlayers=exports.updateUserRoom=exports.onUserHasMatchesToObserve=exports.onUserHasTeam=exports.updateUserTeam=exports.updateUserRoleToCaptain=undefined;var _this=this;var _helpers=require('../helpers');var _firebase=require('../config/firebase');var _firebase2=_interopRequireDefault(_firebase);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var updateUserRoleToCaptain=exports.updateUserRoleToCaptain=function updateUserRoleToCaptain(user){_helpers.DBHelpers.updateUser('users/'+user.id+'/role','CAPTAIN');return{type:'UPDATE_CURRENT_USER',payload:{type:'role',value:'CAPTAIN'}};};var updateUserTeam=exports.updateUserTeam=function updateUserTeam(userId,teamId){return function(dispatch){_helpers.DBHelpers.updateUser('users/'+userId+'/teamId',teamId);};};var onUserHasTeam=exports.onUserHasTeam=function onUserHasTeam(userId){return function(dispatch){var first=true;var done=false;_firebase2.default.database().ref('users'+'/'+userId).on('value',function _callee(snap){var user,updatedUser;return regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!first){_context.next=4;break;}first=false;_context.next=13;break;case 4:user=snap.toJSON();if(!(user.teamId&&!done)){_context.next=13;break;}updatedUser={};_context.next=9;return regeneratorRuntime.awrap(_helpers.DBHelpers.getTeamById(user.teamId));case 9:updatedUser.team=_context.sent;done=true;dispatch({type:'UPDATE_CURRENT_USER',payload:{type:'teamId',value:user.team.id}});dispatch({type:'SET_CURNT_TEAM',team:user.team});case 13:case'end':return _context.stop();}}},null,_this);});};};var onUserHasMatchesToObserve=exports.onUserHasMatchesToObserve=function onUserHasMatchesToObserve(userId){return function(dispatch){return new Promise(function(resolve,reject){return _firebase2.default.database().ref('MatchesToObserve').on('child_added',function _callee2(snapshot){var match,data,room;return regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:match={};data=snapshot.toJSON();if(!(userId==data.observerId)){_context2.next=11;break;}_context2.next=5;return regeneratorRuntime.awrap(_helpers.DBHelpers.getRoomById(data.roomId));case 5:room=_context2.sent;match.firstTeam=room.teamOwner;if(room.joinedTeam)match.secondTeam=room.joinedTeam;if(room.settings.data)match.date=room.settings.date;if(room.settings.location)match.location=room.settings.location;dispatch({type:'SET_OBSERVING_MATCH',match:match});case 11:case'end':return _context2.stop();}}},null,_this);});});};};var updateUserRoom=exports.updateUserRoom=function updateUserRoom(user,room){return function(dispatch){_helpers.DBHelpers.updateUser('users/'+user.id+'/roomId',room.id);dispatch({type:'UPDATE_CURRENT_USER',payload:{type:'roomId',value:room.id}});dispatch({type:'SET_CREATED_ROOM',room:room});};};var getPlayers=exports.getPlayers=function getPlayers(){return function(dispatch){return _helpers.DBHelpers.getUsers().then(function(users){dispatch({type:'GET_USERS',users:users});});};};var listenToUserChanges=exports.listenToUserChanges=function listenToUserChanges(userId){return function(dispatch){dispatch(onUserHasMatchesToObserve(userId));dispatch(onUserHasTeam(userId));};};