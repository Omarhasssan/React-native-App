var express=require('express');var app=express();var server=require('http').Server(app);var io=require('socket.io')(server);server.listen(9460);io.on('connection',function(socket){console.log('connected');socket.on('disconnect',function(){console.log('dissssss');});socket.on('leaveRoom',function(data){socket.leave(data.roomId,function(){return console.log('left the god damn room');});});socket.on('roomByUserId',function(data){socket.join(data.id);});socket.on('roomByRoomId',function(data){socket.join(data.id);});socket.on('setCurntRoom',function(data){io.sockets.in(data.roomId).emit('getCurntRoom',data.roomId);});socket.on('sendRequest',function(data){io.sockets.in(data.userId).emit('requests',data.request);});socket.on('removeRequest',function(data){io.sockets.in(data.userId).emit('removeRequest',data.request);});socket.on('joinRoomsChannel',function(){console.log('joinRommsChannel');socket.join('roomsChannel');});socket.on('roomUpdated',function(data){console.log("in roomuPDATED++++++++++");io.sockets.in('roomsChannel').emit('updateRooms',data.updatedRoom);io.sockets.in(data.updatedRoom.id).emit('updateRoom',data.updatedRoom);});socket.on('addRoom',function(data){io.sockets.in('roomsChannel').emit('roomAdded',data.addedRoom);});});