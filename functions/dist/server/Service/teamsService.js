Object.defineProperty(exports,"__esModule",{value:true});exports.teamsService=undefined;var _firebase=require('../config/firebase');var _firebase2=_interopRequireDefault(_firebase);var _Service=require('../Service');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var _=require('lodash');var teamsService=exports.teamsService={getTeams:getTeams,addTeam:addTeam,getTeamPlayers:getTeamPlayers,updateTeamPlayers:updateTeamPlayers,getTeamMatches:getTeamMatches,addMatchToTeam:addMatchToTeam,getTeamById:getTeamById,updateTeam:updateTeam};function getTeams(){var _this=this;var arr,res;return regeneratorRuntime.async(function getTeams$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:arr=[],res=void 0;return _context2.abrupt('return',new Promise(function(resolve,reject){_firebase2.default.database().ref('teams').once('value',function _callee(snapshot){var teams;return regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:teams=snapshot.toJSON();_context.t0=regeneratorRuntime.keys(teams);case 2:if((_context.t1=_context.t0()).done){_context.next=17;break;}indx=_context.t1.value;if(!teams[indx].players){_context.next=14;break;}_context.t2=regeneratorRuntime.keys(teams[indx].players);case 6:if((_context.t3=_context.t2()).done){_context.next=13;break;}i=_context.t3.value;_context.next=10;return regeneratorRuntime.awrap(_Service.usersService.getUserById(teams[indx].players[i]));case 10:teams[indx].players[i]=_context.sent;_context.next=6;break;case 13:teams[indx].players=Object.values(teams[indx].players);case 14:arr.push(teams[indx]);_context.next=2;break;case 17:resolve(arr);case 18:case'end':return _context.stop();}}},null,_this);});}));case 2:case'end':return _context2.stop();}}},null,this);}function addTeam(team){var teamsRef=_firebase2.default.database().ref('teams').push();team.id=teamsRef.key;return teamsRef.set(team).then(function(){return Promise.resolve(teamsRef.key);});}function getTeamPlayers(teamId){var arr=[];return new Promise(function(resolve,reject){return _firebase2.default.database().ref('teams'+'/'+teamId+'/'+'players').once('value',function(snapshot){if(snapshot.toJSON()!=null)return resolve(Object.values(snapshot.toJSON()));return resolve([]);});});}function updateTeamPlayers(teamId,playerId){return getTeamPlayers(teamId).then(function(teamPlayers){teamPlayers.push(playerId);_firebase2.default.database().ref('teams'+'/'+teamId+'/'+'players').set(teamPlayers);});}function updateTeam(route,value){return _firebase2.default.database().ref(route).set(value);}function getTeamMatches(teamId){return new Promise(function(resolve,reject){return _firebase2.default.database().ref('teams'+'/'+teamId+'/'+'matches').once('value',function(snapshot){var matches=snapshot.toJSON();return resolve(matches||[]);});resolve([]);});}function addMatchToTeam(teamId,matchId){var matches;return regeneratorRuntime.async(function addMatchToTeam$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return regeneratorRuntime.awrap(getTeamMatches(teamId));case 2:matches=_context3.sent;_firebase2.default.database().ref('teams'+'/'+teamId+'/'+'matches'+'/'+(Object.keys(matches).length||0)).set(matchId);case 4:case'end':return _context3.stop();}}},null,this);}function getTeamById(teamId){var _this2=this;var withoutMatches=arguments[1]=='withoutTeamMatches';return new Promise(function(resolve,reject){_firebase2.default.database().ref('teams'+'/'+teamId).once('value',function _callee2(snapshot){var team,teamObj,playersPromises,p1,matchesPromises,p2;return regeneratorRuntime.async(function _callee2$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:team=snapshot.toJSON();teamObj={players:{},matches:[]};teamObj.id=team.id;teamObj.name=team.name;teamObj.records=team.records;if(team.players){playersPromises=Object.values(team.players).map(function(player){return _Service.usersService.getUserById(player);});p1=Promise.all(playersPromises).then(function(players){players.map(function(player,i){teamObj.players[i]=player;});});}if(!withoutMatches){matchesPromises=Object.values(team.matches).map(function(match){return _Service.matchesService.getMatchById(match,teamId,false);});p2=Promise.all(matchesPromises).then(function(matches){matches.map(function(match){return teamObj.matches.push(match);});});}_context4.next=9;return regeneratorRuntime.awrap(Promise.all([p1,p2]).then(function(){return resolve(teamObj);}));case 9:case'end':return _context4.stop();}}},null,_this2);});});}